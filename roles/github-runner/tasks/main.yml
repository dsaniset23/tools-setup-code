- name: Set prompt name command
  ansible.builtin.shell: set-prompt {{ tool_name }}

- name: Add github runner user
  ansible.builtin.user:
    name: github-runner

- name: Create directory
  ansible.builtin.file:
    name: /actions-runner
    state: directory
    owner: github-runner
    group: github-runner

- name: Download the runner
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.325.0/actions-runner-linux-x64-2.325.0.tar.gz
    dest: /actions-runner
    remote_src: yes
    owner: github-runner
    group: github-runner

- name: Install libicu
  ansible.builtin.dnf:
    name: libicu
    state: installed

- name: Get token
  ansible.builtin.shell: |
    gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/dsaniset23/actions/runners/registration-token | jq .token
  register: token
  become_user: ec2-user

- name: Create runner and register the configuration experience
  ansible.builtin.shell: |
    ./config.sh --unattended \
                --url https://github.com/dsaniset23 \
                --token {{ token.stdout | trim }} \
                --name {{ ansible_hostname }} \
                --runnergroup Default
  become_user: github-runner
  args:
    chdir: /actions-runner
  ignore_errors: yes

#To make this a service, we need to copy the service file
- name: Copy the service file
  ansible.builtin.copy:
    src: github-runner.service
    dest: /etc/systemd/system/github-runner.service

- name: Start the service
  ansible.builtin.systemd_service:
    name: github-runner
    enabled: true
    state: restarted
    daemon-reload: true

- name: Copy terraform
  ansible.builtin.get_url:
    url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    dest: /etc/yum.repos.d/hashicorp.repo

- name: Install terraform
  ansible.builtin.dnf:
    name: terraform
    state: installed

- name: Copy kubernetes repo file
  ansible.builtin.copy:
    src: kubernetes.repo
    dest: /etc/yum.repos.d/kubernetes.repo

- name: Install Kubernetes
  ansible.builtin.dnf:
    name: kubectl
    state: installed

- name: Install Docker
  ansible.builtin.shell: |
    curl -o /etc/yum.repos.d/docker.repo https://download.docker.com/linux/rhel/docker-ce.repo
    dnf install docker-ce --nobest -y
    usermod -a -G docker github-runner
    systemctl enable docker
    systemctl start docker

- name: LVM Layout
  ansible.builtin.include_role:
    name: common
    tasks_from: lvm

- name: Download Helm binary
  ansible.builtin.get_url:
    url: https://get.helm.sh/helm-v3.19.0-linux-amd64.tar.gz
    dest: /tmp/helm-v3.19.0-linux-amd64.tar.gz
    mode: '0644'
    force: no   # skip download if already exists

- name: Extract Helm binary
  ansible.builtin.unarchive:
    src: /tmp/helm-v3.19.0-linux-amd64.tar.gz
    dest: /tmp
    remote_src: yes
    extra_opts: [--strip-components=1]   # removes 'linux-amd64' folder inside tar

- name: Move Helm to /usr/local/bin
  ansible.builtin.copy:
    src: /tmp/helm
    dest: /usr/local/bin/helm
    mode: '0755'
    remote_src: yes
    force: no

- name: Ensure Helm is callable
  ansible.builtin.command: helm version
  register: helm_check
  failed_when: helm_check.rc != 0


- name: Installing argoCD
  ansible.builtin.get_url:
    url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    dest: /usr/local/bin/argocd
    mode: 0555
